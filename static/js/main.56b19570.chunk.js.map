{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","actions","post","then","data","catch","error","id","delete","get","ContactForm","state","handlChange","event","currentTarget","value","setState","handlSubmit","preventDefault","console","log","props","formSubmitHandler","reset","className","styles","formConteiner","onSubmit","this","labelName","htmlFor","inputName","onChange","type","pattern","title","required","buttonAddContact","Component","connect","operations","getFilter","contacts","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","selectors","target","inputFilter","onDeleteButton","listContactList","map","listStyle","buttonContactList","onClick","App","fetchContact","appConteiner","text","createReducer","_","action","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56b19570.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContactList\":\"ContactList_listContactList__2TG2H\",\"listStyle\":\"ContactList_listStyle__3iIqv\",\"buttonContactList\":\"ContactList_buttonContactList__1hKcz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appConteiner\":\"App_appConteiner__1U2-L\",\"text\":\"App_text__Y16aQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__vvJQG\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, fetchContact };\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport operations from \"../../redux/operations\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handlChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n    // value - это намбер  в форме\r\n  };\r\n\r\n  handlSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.formSubmitHandler(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.formConteiner} onSubmit={this.handlSubmit}>\r\n          <label className={styles.labelName} htmlFor=\"\">\r\n            Name\r\n            <input\r\n              className={styles.inputName}\r\n              onChange={this.handlChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.labelName} htmlFor=\"\">\r\n            Number\r\n            <input\r\n              className={styles.inputName}\r\n              onChange={this.handlChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.buttonAddContact} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  formSubmitHandler: (name, number) =>\r\n    dispatch(operations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getFilter,\r\n  getAllContacts,\r\n  getVisibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport actions from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.inputFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: selectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) => dispatch(actions.changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport operations from \"../../redux/operations\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\nconst ContactList = ({ contacts, onDeleteButton }) => {\r\n  return (\r\n    <>\r\n      <ul className={styles.listContactList}>\r\n        {contacts.map((contact) => (\r\n          <li className={styles.listStyle} key={contact.id}>\r\n            {contact.name + \" : \" + contact.number}\r\n            <button\r\n              className={styles.buttonContactList}\r\n              onClick={() => {\r\n                onDeleteButton(contact.id);\r\n              }}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.array.isRequired,\r\n  onDeleteButton: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteButton: (id) => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport styles from \"./App.module.css\";\r\nimport operations from \"./redux/operations\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.appConteiner}>\r\n          <h1 className={styles.text}>Phonebook</h1>\r\n          <ContactForm />\r\n          <h2 className={styles.text}>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContact: () => dispatch(operations.fetchContact()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContactSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactReducer from \"./reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"ContactForm_labelName__1ePGa\",\"inputName\":\"ContactForm_inputName__3Xyzv\",\"buttonAddContact\":\"ContactForm_buttonAddContact__ZqqE9\"};"],"sourceRoot":""}